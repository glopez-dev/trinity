default:
  cache:
    key: ${CI_COMMIT_REF_SLUG}-maven
    paths:
      - .m2/repository
      - backend/target/
    policy: pull-push
  tags:
    - k8s

stages:
  - test
  - package
  - deploy

variables:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -DthreadCount=4 -Xmx2g"
  BACKEND_IMAGE: $DOCKER_HUB_USERNAME/t-dev-701-backend

Run Backend unit-tests:
  stage: test
  image: eclipse-temurin:21-jdk-jammy
  script:
    - cd backend
    - chmod +x mvnw
    - ./mvnw test jacoco:report
  artifacts:
    when: always
    reports:
      junit: backend/target/surefire-reports/TEST-*.xml
      coverage_report:
        coverage_format: jacoco
        path: backend/target/site/jacoco/jacoco.xml
    expire_in: 1 week

Sonar Analysis:
  stage: test
  image: 
    name: sonarsource/sonar-scanner-cli:latest
  variables:
    SONAR_HOST_URL: "http://sonarqube.sonarqube.svc.cluster.local:80"
    SONAR_TOKEN: ${SONAR_TOKEN}
  script:
    - cd backend
    - sonar-scanner
      -Dsonar.projectKey=PAR_11_T-DEV-703-Mobile_fa36ad8d-c08b-40b0-a450-3d1a3b34afb0
      -Dsonar.sources=backend/src/main/java
      -Dsonar.tests=backend/src/test/java
      -Dsonar.java.binaries=backend/target/classes
      -Dsonar.java.test.binaries=backend/target/test-classes
      -Dsonar.junit.reportPaths=backend/target/surefire-reports
      -Dsonar.coverage.jacoco.xmlReportPaths=backend/target/site/jacoco/jacoco.xml
      -Dsonar.java.libraries=backend/target/dependency/*.jar
  needs: ['Run Backend unit-tests']
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

Build the Backend prod image:
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    BACKEND_IMAGE_TAG_PROD: $BACKEND_IMAGE:prod-$CI_COMMIT_SHORT_SHA
  script:
    - echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"username\":\"$DOCKER_HUB_USERNAME\",\"password\":\"$DOCKER_HUB_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor 
      --context="./backend"
      --dockerfile="./backend/Dockerfile"
      --target="prod"
      --destination="$BACKEND_IMAGE_TAG_PROD"
      --destination="$BACKEND_IMAGE:latest"
      --cache=true
      --cache-ttl=24h
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

Update the ArgoCD deployment file:
  stage: deploy
  image: alpine:latest
  variables:
    BACKEND_IMAGE_TAG_PROD: $BACKEND_IMAGE:prod-$CI_COMMIT_SHORT_SHA
  before_script:
    - apk add --no-cache git
    - git config --global user.email "gitlab-ci@example.com"
    - git config --global user.name "GitLab CI"
  script:
    - | 
      cd deployment/trinity && \
      sed -i "s|image:.*|image: ${BACKEND_IMAGE_TAG_PROD}|" backend-deployment.yaml && \
      git add backend-deployment.yaml && \
      git commit -m "Update backend image to ${BACKEND_IMAGE_TAG_PROD}" && \
      git push "https://oauth2:${CI_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git" HEAD:${CI_DEFAULT_BRANCH}
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH